name: Deploy Frontend Application

on:
  push:
    branches:
      - main
      - new-feature

env:
  DOCKER_IMAGE: xiaojieyi/234-deploylab-frontend  # 统一镜像名称变量

jobs:
  deploy-main:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest
          build-args: |
            TARGET=ng-deploy

      - name: Deploy to production
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          script: |
            mkdir -p /home/ubuntu/frontend
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" > dockerhub_token.txt
            docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin < dockerhub_token.txt
            rm dockerhub_token.txt
            docker compose -f /home/ubuntu/frontend/docker-compose.yml down || true
            docker compose -f /home/ubuntu/frontend/docker-compose.yml pull
            docker compose -f /home/ubuntu/frontend/docker-compose.yml up -d

  deploy-new-feature:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/new-feature'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:new-feature
          build-args: |
            TARGET=ng-deploy

      - name: Deploy to staging
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          script: |
            mkdir -p /home/ubuntu/frontend-new
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" > dockerhub_token.txt
            docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin < dockerhub_token.txt
            rm dockerhub_token.txt
            docker compose -f /home/ubuntu/frontend-new/docker-compose-prod.yml down || true
            docker compose -f /home/ubuntu/frontend-new/docker-compose-prod.yml pull
            docker compose -f /home/ubuntu/frontend-new/docker-compose-prod.yml up -d