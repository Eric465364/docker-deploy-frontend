name: Deploy Frontend Application

on:
  push:
    branches:
      - main
      - new-feature

env:
  DOCKER_IMAGE: xiaojieyi/234-deploylab-frontend  # 替换为您的Docker Hub用户名

jobs:
  deploy-main:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest
          build-args: |
            TARGET=ng-deploy

      - name: Generate deployment script
        run: |
          cat << 'EOF' > deploy.sh
          #!/bin/bash
          mkdir -p /home/ubuntu/frontend
          cd /home/ubuntu/frontend
          docker logout
          echo "$1" | docker login --username $2 --password-stdin
          docker compose down || true
          docker compose up -d --pull always
          EOF
          chmod +x deploy.sh

      - name: Deploy to production
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          script: |
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" > token.txt
            ./deploy.sh "$(cat token.txt)" "${{ secrets.DOCKER_HUB_USERNAME }}"
            rm token.txt

  deploy-new-feature:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/new-feature'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:new-feature
          build-args: |
            TARGET=ng-deploy

      - name: Prepare deployment files
        run: |
          mkdir -p deploy
          cp docker-compose-prod.yml deploy/docker-compose.yml
          cat << 'EOF' > deploy/deploy.sh
          #!/bin/bash
          mkdir -p /home/ubuntu/frontend-new
          cd /home/ubuntu/frontend-new
          docker logout
          echo "$1" | docker login --username $2 --password-stdin
          docker compose down || true
          docker compose up -d --pull always
          EOF
          chmod +x deploy/deploy.sh

      - name: Upload deployment files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          source: "deploy/*"
          target: "/home/ubuntu/frontend-new"

      - name: Execute deployment
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/frontend-new
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" > token.txt
            ./deploy.sh "$(cat token.txt)" "${{ secrets.DOCKER_HUB_USERNAME }}"
            rm token.txt